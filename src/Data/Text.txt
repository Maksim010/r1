Разработать приложение, генерирующее несколько последовательностей чисел (по заранее заданному алгоритму, например, последовательность чисел Фибоначчи, последовательность простых чисел, последовательность факториалов целых неотрицательных чисел). Генерирование типа последовательности и количество генерируемых элементов должно определяться пользователем. Для каждой последовательности после генерации указать время работы соответствующего алгоритма. Определение этого времени реализовать, используя шаблон проектирования «Patterns.Decorator».
Разработать приложение, создающее список плоских геометрических фигур (круг, квадрат, треугольник и т.д., но не менее 5 фигур). Создание списка должно быть реализовано несколькими способами (ввод с клавиатуры, чтение из файла, генерирование случайным образом). Далее необходимо вывести данные о тех фигурах, площадь которых меньше средней площади всех фигур. При этом вычисление площади фигур может производиться обычным способом, а может округляться по избытку, по недостатку или до ближайшего значения до указанного пользователем количества знаков после запятой (вид округления тоже указывается пользователем). Округление реализовать самостоятельно (через соответствующие методы класса Math), используя шаблон проектирования «Patterns.Decorator».
Разработать приложение, читающее список неких товаров (название, вес одной единицы, стоимость одной единицы, количество единиц товара) из некоторого файла (формат файла можно выбрать произвольно). Далее приложение должно выводить этот список на экран, отсортировав его по суммарному весу всех единиц каждого товара. Затем приложение должно выводить этот же список на экран ещё раз, отсортировав его по суммарной стоимости всех единиц каждого товара. Для сортировки списка товаров использовать возможности класса Collections. После каждого вывода отсортированного списка необходимо вывести количество операций сравнения, использовавшееся при сортировке списка. Подсчёт количества операций сравнения реализовать, используя шаблон проектирования «Patterns.Decorator».
Разработать приложение с графическим пользовательским интерфейсом, представляющее собой простейший калькулятор целых чисел, содержащий одно текстовое поле (заблокированное для непосредственного редактирования) и 16 кнопок: 10 цифр, 4 операции (сложение, вычитание, умножение, деление), копку «равно» и кнопку «+/-». Приложение должно работать в демонстрационном режиме, то есть после запуска оно должно считать нажатия пользователя на клавиши, и после 10 нажатий, остальные действия игнорировать. Реализацию ограничения демонстрационной версии организовать через шаблон проектирования «Patterns.Decorator».
Разработать приложение, формирующее прайс-лист товаров некоторого магазина. Список товаров (категория, название, закупочная стоимость) считывается из некоторого файла (формат можно выбрать произвольным образом). Также для каждой категории товаров в отдельном файле задаётся процент наценки, если для некоторой категории процент наценки не указан, то принимается наценка по умолчанию (заданная в том же файле). Ещё в одном файле определяются скидки на некоторые конкретные товары, при чём на некоторые товары скидка определяется в процентах, для некоторых - в рублях. Приложение должно вывести все товары с окончательной ценой. Расчет наценок и скидок реализовать через шаблон проектирования «Patterns.Decorator».
Разработать приложение, формирующее отчёты по расписанию занятий. Расписание храниться в отдельном файле, для каждого пункта расписания определены: название предмета, тип занятия (лекция, практика, лабораторная), дата и время начала, длительность в академических часах, номер аудитории. Приложение должно уметь на основе этих данных генерировать три вида отчетов: расписание по конкретному предмету с сортировкой по типам занятий, расписание на конкретный день с сортировкой по времени, расписание для конкретной аудитории с указанием с сортировкой по дню проведения занятия. При этом отчёт должен выводится в файл на диске, но при ошибке записи отчёта (при возникновении IOException или другой ошибки), в отдельный файл ошибок необходимо вывести сообщение об ошибке, а генерацию отчёта прервать (с удалением ошибочного файла). Обработку ошибок в приложении реализовать, используя шаблон проектирования «Patterns.Decorator».
Разработать приложение, выводящее список товаров мебельного магазина, отсортированного по цене. У каждого товара должны быть заданы: категория, название, артикул (уникальный код) и цена. Для мебели в категории «шкафы» необходимо дополнительно указывать тип дверей (обычные, купе, стеклянные). Для мебели категории «стол» необходимо указывать количество выдвижных ящиков. Для мебели категории «стул» необходимо указывать наличие спинки. Кроме продажи отдельных предметов мебели в магазине могут продаваться наборы со скидкой 5% от общей стоимости всех предметов мебели этого набора. Подсчёт стоимости набора мебели организовать через шаблон проектирования «Composite».
Разработать приложение, выводящее список товаров компьютерного магазина, отсортированного по цене. У каждого товара должны быть заданы: категория, название, артикул (уникальный код) и цена. Для комплектующих в категории «процессор» необходимо дополнительно указывать тактовую частоту, количество ядер и тип процессорного разъёма. Для комплектующих в категории «оперативная память» необходимо указывать объём в мегабайтах. Для комплектующих категории «видеокарты» необходимо указывать наличие активного охлаждения и объём памяти. Для комплектующих категории «жёсткие диски» необходимо указывать объём в гигабайтах и скорость вращения шпинделя. Для комплектующих категории «материнская плата» необходимо указывать наличие встроенной видеокарты, максимальный поддерживаемый объём оперативной памяти, тип процессорного разъёма. Для комплектующих категории «корпус» необходимо указывать мощность блока питания и тип корпуса (FullTower, Tower, MiniTower, Desktop). Для комплектующих категории «монитор» необходимо указывать размер диагонали экрана и соотношение сторон экрана. Для комплектующих категории «устройства ввода» необходимо указывать тип клавиатуры (обычная, мультимедиа) и количество кнопок мыши. Кроме продажи отдельных комплектующих магазин может продавать системные блоки (корпус, материнская плата, процессор, оперативная память, жёсткий диск, опционально: видеокарта) с надбавкой 15% за сборку или компьютеры целиком (системный блок, монитор, устройства ввода) с надбавкой 5% за сборку. Подсчёт стоимости товаров организовать через шаблон проектирования «Composite».
Разработать приложение, вычисляющее длительность технологических процессов для различных видов деталей. Есть набор элементарных технологических операции, для каждой из которых задаются свои параметры, влияющие на скорость ее выполнения. Операция «Подготовка заготовки»: диаметр стального цилиндра, диаметр заготовки, длина заготовки - время линейно зависит от объёма считываемого металла (по 1 мм3/с). Операция «Нарезка резьбы»: диаметр заготовки, длина резьбы, шаг резьбы - время линейно зависит от общей длины резьбы (длина окружности заготовки умноженная на длину резьбы, поделенную на шаг резьбы даёт общую длину резьбы, время операции равно 1 см/с). Операция «Термообработка»: температура, время выдерживания, скорость охлаждения - время операции складывается из времени разогревания (линейно зависит от температуры: 10°C/с), времени выдерживания и времени охлаждения. Элементарные технические операции используются для производится нескольких видов деталей: винтов (термообработка заготовки при температуре 1000°C с выдерживанием в течение 10 минут и охлаждением со скоростью 0,25°C/с, подготовка заготовки, нарезка резьбы); анкерных болтов (термообработка заготовки при температуре 1250°C с выдерживанием в течение 30 минут и охлаждением со скоростью 0,5°C/с, подготовка заготовки, нарезка резьбы, термообработка заготовки при температуре 1500°C с выдерживанием в течение 30 минут и охлаждением со скоростью 300°C/с); гусеничные траки (подготовка заготовки, термообработка заготовки при температуре 1000°C с выдерживанием в течение 60 минут и охлаждением со скоростью 300°C/с, термообработка заготовки при температуре 1000°C с выдерживанием в течение 30 минут и охлаждением со скоростью 0,1°C/с). Расчёт времени технологического процесса, состоящего из нескольких технологических операций, реализовать с использованием шаблона проектирования «Composite».
Разработать приложение, вычисляющее значение матричного выражения, записанного в Польской инверсной записи. Выражение состоит из операндов (обозначающих квадратные матрицы) и операций, операнды и операции отделяются друг от друга пробелом. В Польской инверсной записи сначала следуют операнды, а затем знак операции, что позволяет избежать использование скобок в выражении. Например, выражение «(a + b) * (c + d) - e / f» в Польской инверсной записи примет вид: «a b + c d + * e f / -». После ввода пользователем выражения программа должна запрашивать у него значение матриц, обозначенных операндами (при этом один и тот же операнд не должен запрашиваться дважды). При вводе значений матриц сначала запрашивается размер матриц (общий для всех операндов - квадратных матриц), затем тип матрицы (обычная, симметричная, верхнетреугольная, нижнетреугольная, диагональная, диагональная с постоянным элементом на главной диагонали), затем вводятся элементы матрицы. После чего вычисляется и выводится значение введённого выражения, но промежуточные результаты в памяти храниться не должны, вычисление всех операций (сложение, вычитание, умножение, деление: умножение на обратную матрицу) должно быть реализовано через шаблон проектирования «Composite».
of
to
and
a
in
is
it
you
that
he
was
for
on
are
with
as
I
his
they
be
at
one
have
this
from
or
had
by
hot
word
but
what
some
we
can
out
other
were
all
there
when
up
use
your
how
said
an
each
she
which
do
their
time
if
will
way
about
many
then
them
write
would
like
so
these
her
long
make
thing
see
him
two
has
look
more
day
could
go
come
did
number
sound
no
most
people
my
over
know
water
than
call
first
who
may
down
side
been
now
find
any
new
work
part
take
get
place
made
live
where
after
back
little
only
round
man
year
came
show
every
good
me
give
our
under
name
very
through
just
form
sentence
great
think
say
help
low
line
differ
turn
cause
much
mean
before
move
right
boy
old
too
same
tell
does
set
three
want
air
well
also
play
small
end
put
home
read
hand
port
large
spell
add
even
land
here
must
big
high
such
follow
act
why
ask
men
change
went
light
kind
off
need
house
picture
try
us
again
animal
point
mother
world
near
build
self
earth
father
head
stand
own
page
should
country
found
answer
school
grow
study
still
learn
plant
cover
food
sun
four
between
state
keep
eye
never
last
let
thought
city
tree
cross
farm
hard
start
might
story
saw
far
sea
draw
left
late
run
don't
while
press
close
night
real
life
few
north
open
seem
together
next
white
children
begin
got
walk
example
ease
paper
group
always
music
those
both
mark
often
letter
until
mile
river
car
feet
care
second
book
carry
took
science
eat
room
friend
began
idea
fish
mountain
stop
once
base
hear
horse
cut
sure
watch
color
face
wood
main
enough
plain
girl
usual
young
ready
above
ever
red
list
though
feel
talk
bird
soon
body
dog
family
direct
pose
leave
song
measure
door
product
black
short
numeral
class
wind
question
happen
complete
ship
area
half
rock
order
fire
south
problem
piece
told
knew
pass
since
top
whole
king
space
heard
best
hour
better
true
during
hundred
five
remember
step
early
hold
west
ground
interest
reach
fast
verb
sing
listen
six
table
travel
less
morning
ten
simple
several
vowel
toward
war
lay
against
pattern
slow
center
love
person
money
serve
appear
road
map
rain
rule
govern
pull
cold
notice
voice
unit
power
town
fine
certain
fly
fall
lead
cry
dark
machine
note
wait
plan
figure
star
box
noun
field
rest
correct
able
pound
done
beauty
drive
stood
contain
front
teach
week
final
gave
green
oh
quick
develop
ocean
warm
free
minute
strong
special
mind
behind
clear
tail
produce
fact
street
inch
multiply
nothing
course
stay
wheel
full
force
blue
object
decide
surface
deep
moon
island
foot
system
busy
test
record
boat
common
gold
possible
plane
stead
dry
wonder
laugh
thousand
ago
ran
check
game
shape
equate
hot
miss
brought
heat
snow
tire
bring
yes
distant
fill
east
paint
language
among
grand
ball
yet
wave
drop
heart
am
present
heavy
dance
engine
position
arm
wide
sail
material
size
vary
settle
speak
weight
general
ice
matter
circle
pair
include
divide
syllable
felt
perhaps
pick
sudden
count
square
reason
length
represent
art
subject
region
energy
hunt
probable
bed
brother
egg
ride
cell
believe
fraction
forest
sit
race
window
store
summer
train
sleep
prove
lone
leg
exercise
wall
catch
mount
wish
sky
board
joy
winter
sat
written
wild
instrument
kept
glass
grass
cow
job
edge
sign
visit
past
soft
fun
bright
gas
weather
month
million
bear
finish
happy
hope
flower
clothe
strange
gone
jump
baby
eight
village
meet
root
buy
raise
solve
metal
whether
push
seven
paragraph
third
shall
held
hair
describe
cook
floor
either
result
burn
hill
safe
cat
century
consider
type
law
bit
coast
copy
phrase
silent
tall
sand
soil
roll
temperature
finger
industry
value
fight
lie
beat
excite
natural
view
sense
ear
else
quite
broke
case
middle
kill
son
lake
moment
scale
loud
spring
observe
child
straight
consonant
nation
dictionary
milk
speed
method
organ
pay
age
section
dress
cloud
surprise
quiet
stone
tiny
climb
cool
design
poor
lot
experiment
bottom
key
iron
single
stick
flat
twenty
skin
smile
crease
hole
trade
melody
trip
office
receive
row
mouth
exact
symbol
die
least
trouble
shout
except
wrote
seed
tone
join
suggest
clean
break
lady
yard
rise
bad
blow
oil
blood
touch
grew
cent
mix
team
wire
cost
lost
brown
wear
garden
equal
sent
choose
fell
fit
flow
fair
bank
collect
save
control
decimal
gentle
woman
captain
practice
separate
difficult
doctor
please
protect
noon
whose
locate
ring
character
insect
caught
period
indicate
radio
spoke
atom
human
history
effect
electric
expect
crop
modern
element
hit
student
corner
party
supply
bone
rail
imagine
provide
agree
thus
capital
won't
chair
danger
fruit
rich
thick
soldier
process
operate
guess
necessary
sharp
wing
create
neighbor
wash
bat
rather
crowd
corn
compare
poem
string
bell
depend
meat
rub
tube
famous
dollar
stream
fear
sight
thin
triangle
planet
hurry
chief
colony
clock
mine
tie
enter
major
fresh
search
send
yellow
gun
allow
print
dead
spot
desert
suit
current
lift
rose
continue
block
chart
hat
sell
success
company
subtract
event
particular
deal
swim
term
opposite
wife
shoe
shoulder
spread
arrange
camp
invent
cotton
born
determine
quart
nine
truck
noise
level
chance
gather
shop
stretch
throw
shine
property
column
molecule
select
wrong
gray
repeat
require
broad
prepare
salt
nose
plural
anger
claim
continent
oxygen
sugar
death
pretty
skill
women
season
solution
magnet
silver
thank
branch
match
suffix
especially
fig
afraid
huge
sister
steel
discuss
forward
similar
guide
experience
score
apple
bought
led
pitch
coat
mass
card
band
rope
slip
win
dream
evening
condition
feed
tool
total
basic
smell
valley
nor
double
seat
arrive
master
track
parent
shore
division
sheet
substance
favor
connect
post
spend
chord
fat
glad
original
share
station
dad
bread
charge
proper
bar
offer
segment
slave
duck
instant
market
degree
populate
chick
dear
enemy
reply
drink
occur
support
speech
nature
range
steam
motion
path
liquid
log
meant
quotient
teeth
shell
neck